name: Sync main to dev after updates

on:
  workflow_run:
    workflows: ["Release Main"]
    types:
      - completed
    branches:
      - main

jobs:
  sync_to_dev:
    runs-on: ubuntu-latest
    steps:
      - name: Get token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.bumper_app_id }}
          private-key: ${{ secrets.bumper_key }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "gh-actions@emdgroup.com"

      - name: Sync main to dev
        run: |
          # Make sure we have the latest main and dev
          git fetch origin main dev
          
          # Checkout dev
          git checkout dev
          
          # First try to merge with "ours" strategy for version files
          git merge origin/main -m "chore: sync changes from main [skip ci]" -X theirs -- package.json pubspec.yaml CHANGELOG.md
      
          # If there are conflicts, resolve some files with 'theirs'
          if git ls-files -u | grep -q .; then
            echo "Conflicts found â€” resolving specific files in favor of main..."
            
            git checkout --theirs package.json
            git checkout --theirs pubspec.yaml
            git checkout --theirs CHANGELOG.md
            
            git add package.json pubspec.yaml CHANGELOG.md
            git commit -m "chore: auto-resolve merge conflicts from main [skip ci]"
          fi
          
          # Push changes to dev
          git push origin dev